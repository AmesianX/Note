    /**
     * Definition for ListNode.
     * public class ListNode {
     *     int val;
     *     ListNode next;
     *     ListNode(int val) {
     *         this.val = val;
     *         this.next = null;
     *     }
     * }
     */


    public class Solution {
        /*
         * @param head: The first node of linked list.
         * @return: True if it has a cycle, or false
         */
        public boolean hasCycle(ListNode head) {
            if(head==null||head.next==null){
                return false;
            }
            // write your code here
	    //如果是环形跑道，则跑得快的一定会和跑得慢的相遇
            ListNode thisNode=head;
            ListNode thatNode=head.next;

            while(thisNode!=null){
                if(thisNode==thatNode){
                    return true;
                }

                if(thisNode.next==null
                        ||thatNode.next==null
                        ||thatNode.next.next==null){
                    return false;
                }

                thisNode=thisNode.next;
                thatNode=thatNode.next.next;
            }
            return false;
        }
    }